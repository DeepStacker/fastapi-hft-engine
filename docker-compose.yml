
services:
  web:
    build: .
    container_name: DB_ingestion-container
    ports:
      - "8000:5000"
    env_file:
      - .env
    # environment:
    #   - FIREBASE_CREDENTIALS_PATH=/app/firebase-credentials.json  # Optional: if Firebase is used
    networks:
      - stockify-db-network
    depends_on:
      mysql:
        condition: service_healthy  # Wait for MySQL to be healthy
      redis:
        condition: service_started
    command: ["/wait-for-it.sh", "mysql:3306", "--timeout=60", "--", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "5000", "--reload"]
    # volumes:
    #   - ./firebase-credentials.json:/app/firebase-credentials.json:ro  # Optional: if Firebase is used

  redis:
    image: redis:7.4.2  # Pin to specific version for stability
    container_name: redis_for_stockify_db
    ports:
      - "6379:6379"
    networks:
      - stockify-db-network  # Updated network name
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  mysql:
    image: mysql:9.2.0  # Pin exact version for consistency
    container_name: mysql_for_stockify_db
    ports:
      - "3307:3306"  # Host:Container
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test_db_optionchain
    volumes:
      - mysql_data:/var/lib/mysql
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro  # Fix timezone warnings
    networks:
      - stockify-db-network  # Updated network name
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    command: ["mysqld", "--pid-file=/var/lib/mysql/mysqld.pid"]  # Fix insecure PID file warning

networks:
  stockify-db-network:  # Updated network name
    driver: bridge

volumes:
  mysql_data: